repeatedly call API:
    calculate delta
    emit events (new tx, new block)

on tx:
    update person

on block:
    update bus


API:

get mempool

    http://213.239.193.208:9053/transactions/unconfirmed?limit=90&offset=0

    https://api.ergoplatform.com/transactions/unconfirmed?limit=8&sortBy=size&sortDirection=desc
    sortBy:
        creationtimestamp
        size

    a few, 20-30 tx at most

get confirmed blocks

    http://213.239.193.208:9053/blocks?limit=50&offset=0
    returns the blocks (well, only block ids) starting at the given offset, so this call actually returns the very first 50 blocks in the blockchain

    https://api.ergoplatform.com/api/v1/blocks?limit=1&offset=0&sortBy=height&sortDirection=desc

    sortBy:
        blockcoins
        blockfee
        difficulty
        height
        minerreward
        size
        timestamp
        transactionscount



Take the string 'a,a,b,a,b$'
Parse it in shift reduce way using the SLR1 parse table designed today in the class and make its parse tree as well



(0) Z -> S$
(1) S -> L , S
(2) S -> L
(3) L -> a
(4) L -> b

-----------------------
| INPUT => a,a,b,a,b$ |
-----------------------

STACK                       Input                   Next action
$0                          a,a,b,a,b$              S1
$0a1                        ,a,b,a,b$               R3
$0L3                        ,a,b,a,b$               S6
$0L3,6                      a,b,a,b$                S1
$0L3,6a1                    ,b,a,b$                 R3
$0L3,6L3                    ,b,a,b$                 S6
$0L3,6L3,6                  b,a,b$                  S2
$0L3,6L3,6b2                ,a,b$                   R4
$0L3,6L3,6L3                ,a,b$                   S6
$0L3,6L3,6L3,6              a,b$                    S1
$0L3,6L3,6L3,6a1            ,b$                     R3
$0L3,6L3,6L3,6L3            ,b$                     S6
$0L3,6L3,6L3,6L3,6          b$                      S2
$0L3,6L3,6L3,6L3,6b2        $                       R4
$0L3,6L3,6L3,6L3,6L3        $                       R2
$0L3,6L3,6L3,6L3,6S7        $                       R1
$0L3,6L3,6L3,6S7            $                       R1
$0L3,6L3,6S7                $                       R1
$0L3,6S7                    $                       R1
$0S4                        $                       S5
$0S4$5                                              Accept

